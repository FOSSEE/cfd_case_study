<?php
// $Id$
require_once('general_deletion.inc');
require_once('email.inc');
/**
 * Implementation of hook_menu().
 */
function cfd_case_study_menu()
{
	$items = array();
	/* PROPOSAL */
	$items['case-study-project/proposal'] = array(
		'title'=> 'Case Study Proposal Form',
		'description'=> 'Case Study Proposal Form',
		'page callback'=> 'drupal_get_form',
		'page arguments'=> array(
			'cfd_case_study_proposal_form'
		),
		'access arguments'=> array(
			'Case Study create proposal'
		),
		'type'=> MENU_NORMAL_ITEM,
		'file'=> 'proposal.inc'
	);
	$items['case-study-project/manage-proposal'] = array(
		'title'=> 'Manage Case Study Proposals',
		'description'=> 'Manage Case StudyProposals',
		'page callback'=> 'cfd_case_study_proposal_pending',
		'access callback'=> 'user_access',
		'access arguments'=> array(
			'Case Study manage proposal'
		),
		'file'=> 'manage_proposal.inc'
	);
	$items['case-study-project/manage-proposal/pending'] = array(
		'title'=> 'Pending Proposals',
		'description'=> 'Pending  Case Study Proposals Queue',
		'page callback'=> 'cfd_case_study_proposal_pending',
		'access callback'=> 'user_access',
		'access arguments'=> array(
			'Case Study manage proposal'
		),
		'type'=> MENU_DEFAULT_LOCAL_TASK,
		'weight'=> 1,
		'file'=> 'manage_proposal.inc'
	);
	$items['case-study-project/manage-proposal/all'] = array(
		'title'=> 'All Proposals',
		'description'=> 'All Proposals',
		'page callback'=> 'cfd_case_study_proposal_all',
		'access callback'=> 'user_access',
		'access arguments'=> array(
			'Case Study manage proposal'
		),
		'type'=> MENU_LOCAL_TASK,
		'weight'=> 4,
		'file'=> 'manage_proposal.inc'
	);
	$items['case-study-project/manage-proposal/approve'] = array(
		'title'=> 'Approve Proposal',
		'description'=> 'Approve Proposal',
		'page callback'=> 'drupal_get_form',
		'page arguments'=> array(
			'cfd_case_study_proposal_approval_form'
		),
		'access arguments'=> array(
			'Case Study manage proposal'
		),
		'type'=> MENU_CALLBACK,
		'file'=> 'manage_proposal.inc'
	);
	$items['case-study-project/manage-proposal/solution-proposal-approve'] = array(
		'title'=> 'Approve Solution Proposal',
		'description'=> 'Approve Solution Proposal',
		'page callback'=> 'drupal_get_form',
		'page arguments'=> array(
			'cfd_case_study_solution_proposal_approval_form'
		),
		'access arguments'=> array(
			'Case Study manage proposal'
		),
		'type'=> MENU_CALLBACK,
		'file'=> 'manage_solution_proposal.inc'
	);
	$items['case-study-project/manage-proposal/edit'] = array(
		'title'=> 'Edit Proposal',
		'description'=> 'Edit Proposal',
		'page callback'=> 'drupal_get_form',
		'page arguments'=> array(
			'cfd_case_study_proposal_edit_form'
		),
		'access arguments'=> array(
			'Case Study manage proposal'
		),
		'type'=> MENU_CALLBACK,
		'file'=> 'manage_proposal.inc'
	);
	$items['case-study-project/manage-proposal/status'] = array(
		'title'=> 'Proposal Status',
		'description'=> 'Proposal Status',
		'page callback'=> 'drupal_get_form',
		'page arguments'=> array(
			'cfd_case_study_proposal_status_form'
		),
		'access arguments'=> array(
			'Case Study approve proposal'
		),
		'type'=> MENU_CALLBACK,
		'file'=> 'manage_proposal.inc'
	);
	/*$items['case-study-project/show-proposal'] = array(
		'title'=> 'Case Study Solution Proposal',
		'page callback'=> 'drupal_get_form',
		'page arguments'=> array(
			'cfd_case_study_solution_proposal_form'
		),
		'access arguments'=> array(
			'Case Study propose solution'
		),
		'type'=> MENU_CALLBACK,
		'file'=> 'solution_proposal.inc'
	);*/
	/* CODE REVIEW */
	/*$items['case-study-project/code-approval'] = array(
		'title'=> 'LM Manage Code Approval',
		'description'=> 'Manage Code Approval',
		'page callback'=> 'cfd_case_study_code_approval',
		'access arguments'=> array(
			'Case Study approve code'
		),
		'type'=> MENU_NORMAL_ITEM,
		'file'=> 'code_approval.inc'
	);
	$items['case-study-project/abstract-approval/approve'] = array(
		'title'=> 'Code Approval',
		'description'=> 'Code Approval',
		'page callback'=> 'drupal_get_form',
		'page arguments'=> array(
			'cfd_case_study_abstract_approval_form'
		),
		'access arguments'=> array(
			'Case Study approve code'
		),
		'type'=> MENU_DEFAULT_LOCAL_TASK,
		'weight'=> 1,
		'file'=> 'code_approval.inc'
	);*/
	$items['case-study-project/abstract-approval/bulk'] = array(
		'title'=> 'Bulk Manage',
		'description'=> 'Bulk Mangage',
		'page callback'=> 'drupal_get_form',
		'page arguments'=> array(
			'cfd_case_study_abstract_bulk_approval_form'
		),
		'access arguments'=> array(
			'Case Study bulk manage abstract'
		),
		'type'=> MENU_LOCAL_TASK,
		'weight'=> 2,
		'file'=> 'abstract_bulk_approval.inc'
	);
	$items['case-study-project/code-approval/bulk'] = array(
		'title'=> 'Bulk Manage',
		'description'=> 'Bulk Mangage',
		'page callback'=> 'drupal_get_form',
		'page arguments'=> array(
			'cfd_case_study_bulk_approval_form'
		),
		'access arguments'=> array(
			'Case Study bulk manage abstract'
		),
		'type'=> MENU_LOCAL_TASK,
		'weight'=> 2,
		'file'=> 'bulk_approval.inc'
	);
	/*$items['cfd_case_study/code_approval/dependency'] = array(
	'title'=> 'Dependency',
	'description'=> 'Dependency Mangage',
	'page callback'=> 'drupal_get_form',
	'page arguments'=> array('cfd_case_study_dependency_approval_form'),
	'access arguments'=> array('Case Study bulk manage abstract'),
	'type'=> MENU_LOCAL_TASK,
	'weight'=> 3,
	'file'=> 'dependency_approval.inc',
	);*/
	$items['case-study-project/code-approval/upload'] = array(
		'title'=> 'Upload Code',
		'description'=> 'Admin Upload',
		'page callback'=> 'drupal_get_form',
		'page arguments'=> array(
			'cfd_case_study_bulk_upload_code_form'
		),
		'access arguments'=> array(
			'Case Study bulk manage abstract'
		),
		'type'=> MENU_CALLBACK,
		'weight'=> 4,
		'file'=> 'bulk_upload_code.inc'
	);
	$items['case-study-project/code-approval/notes'] = array(
		'title'=> 'Notes for Reviewers',
		'description'=> 'Notes for Reviewers',
		'page callback'=> 'drupal_get_form',
		'page arguments'=> array(
			'cfd_case_study_lab_notes_form'
		),
		'access arguments'=> array(
			'Case Study bulk manage abstract'
		),
		'type'=> MENU_CALLBACK,
		'weight'=> 4,
		'file'=> 'notes.inc'
	);
	/* CODE UPLOAD */
	/* CODE UPLOAD */
	$items['case-study-project/abstract-code'] = array(
		'title'=> 'Abstract and Project Files Upload',
		'description'=> 'Abstract Submission',
		'page callback'=> 'cfd_case_study_abstract',
		'access callback'=> 'user_access',
		'access arguments'=> array(
			'Case Study upload abstract'
		),
		'file'=> 'upload_code.inc'
	);
	$items['case-study-project/abstract-code/case-study-project-list'] = array(
		'title'=> 'Case Study',
		'description'=> 'List Experiments',
		'page callback'=> 'cfd_case_study_abstract',
		'access arguments'=> array(
			'Case Study upload abstract'
		),
		'type'=> MENU_DEFAULT_LOCAL_TASK,
		'file'=> 'upload_code.inc',
		'weight'=> 1
	);
	$items['case-study-project/abstract-code/upload'] = array(
		'title'=> 'Abstract and Project Upload',
		'description'=> 'Project Upload',
		'page callback'=> 'drupal_get_form',
		'access callback'=> 'user_access',
		'page arguments'=> array(
			'cfd_case_study_upload_abstract_code_form'
		),
		'access arguments'=> array(
			'Case Study upload abstract'
		),
		'type'=> MENU_LOCAL_TASK,
		'file'=> 'upload_code.inc',
		'weight'=> 2
	);
	$items['case-study-project/abstract-code/delete'] = array(
		'title'=> 'Delete Solution',
		'description'=> 'Delete Solution',
		'page callback'=> 'cfd_case_study_upload_code_delete',
		'access arguments'=> array(
			'Case Study upload code'
		),
		'type'=> MENU_CALLBACK,
		'file'=> 'upload_code_delete.inc'
	);
	/* CODE DOWNLOADS */
	$items['case-study-project/download/file'] = array(
		'title'=> 'Code Download',
		'description'=> 'Code Download',
		'page callback'=> 'cfd_case_study_download_solution_file',
		'access arguments'=> array(
			'Case Study download code'
		),
		'type'=> MENU_CALLBACK,
		'file'=> 'download.inc'
	);
	$items['case-study-project/download/solution'] = array(
		'title'=> 'Code Download',
		'description'=> 'Code Download',
		'page callback'=> 'cfd_case_study_download_solution',
		'access arguments'=> array(
			'Case Study download code'
		),
		'type'=> MENU_CALLBACK,
		'file'=> 'download.inc'
	);
	$items['case-study-project/download/experiment'] = array(
		'title'=> 'Code Download',
		'description'=> 'Code Download',
		'page callback'=> 'cfd_case_study_download_experiment',
		'access arguments'=> array(
			'Case Study download code'
		),
		'type'=> MENU_CALLBACK,
		'file'=> 'download.inc'
	);
	$items['case-study-project/download/lab'] = array(
		'title'=> 'Code Download',
		'description'=> 'Code Download',
		'page callback'=> 'cfd_case_study_download_lab',
		'access arguments'=> array(
			'Case Study download code'
		),
		'type'=> MENU_CALLBACK,
		'file'=> 'download.inc'
	);
	$items['case-study-project/full-download/experiment'] = array(
		'title'=> 'Code Download',
		'description'=> 'Code Download',
		'page callback'=> 'cfd_case_study_download_completed_project',
		'access arguments'=> array(
			'Case Study approve code'
		),
		'type'=> MENU_CALLBACK,
		'file'=> 'full_download.inc'
	);
	$items['case-study-project/full-download/project'] = array(
		'title'=> 'Code Download',
		'description'=> 'Code Download',
		'page callback'=> 'cfd_case_study_download_full_project',
		'access arguments'=> array(
			'Case Study download code'
		),
		'type'=> MENU_CALLBACK,
		'file'=> 'full_download.inc'
	);
	/* COMPLETED  Case studies */
	$items['case-study-project/completed-case-studies'] = array(
		'title'=> 'Completed Case studies',
		'page callback'=> 'cfd_case_study_completed_proposals_all',
		'access arguments'=> array(
			'Case Study download code'
		),
		'file'=> 'cfd_case_study_details.inc'
	);
	/* LABS IN PROGRESS */
	$items['case-study-project/case-study-progress'] = array(
		'title'=> 'Case studies in Progress',
		'page callback'=> 'cfd_case_study_progress_all',
		'access arguments'=> array(
			'Case Study download code'
		),
		'file'=> 'cfd_case_study_details.inc'
	);
	/* DOWNLOAD FOR EVERYONE */
	$items['case-study-project/case-study-run'] = array(
		'title'=> 'Download Codes',
		'page callback'=> 'drupal_get_form',
		'page arguments'=> array(
			'cfd_case_study_run_form'
		),
		'access arguments'=> array(
			'Case Study download code'
		),
		'type'=> MENU_NORMAL_ITEM,
		'file'=> 'run.inc'
	);
	$items['case-study-project/download/resource-file'] = array(
		'title'=> 'Download user defined compound file',
		'description'=> 'Download resource file',
		'page callback'=> 'cfd_case_study_download_upload_file',
		'access arguments'=> array(
			'download code'
		),
		'type'=> MENU_CALLBACK,
		'file'=> 'download.inc'
	);
	$items['case-study-project/download/project-file'] = array(
		'title'=> 'Download Project file',
		'description'=> 'Download project file',
		'page callback'=> 'cfd_case_study_project_files',
		'access arguments'=> array(
			'download code'
		),
		'type'=> MENU_CALLBACK,
		'file'=> 'download.inc'
	);
	/* LATEX SCRIPT */
	$items['case-study-project/generate-lab'] = array(
		'title'=> 'Generate Lab',
		'description'=> 'Generate Lab From Latex Script',
		'page callback'=> 'cfd_case_study_download_lab_pdf',
		'access arguments'=> array(
			'Case Study generate lab'
		),
		'type'=> MENU_CALLBACK,
		'file'=> 'latex.inc'
	);
	$items['case-study-project/delete-lab'] = array(
		'title'=> 'Delete Lab PDF',
		'description'=> 'Delete Lab PDF',
		'page callback'=> 'cfd_case_study_delete_lab_pdf',
		'access arguments'=> array(
			'Case Study approve code'
		),
		'type'=> MENU_CALLBACK,
		'file'=> 'latex.inc'
	);
	/* ADMIN SETTINGS */
	$items['admin/settings/case-study'] = array(
		'title'=> 'Case Study Settings',
		'description'=> 'Case Study Settings',
		'page callback'=> 'drupal_get_form',
		'page arguments'=> array(
			'cfd_case_study_settings_form'
		),
		'access arguments'=> array(
			'administer  Case Study'
		),
		'type'=> MENU_NORMAL_ITEM,
		'file'=> 'settings.inc'
	);
	/* AJAX REQUEST */
	$items["lab-bulk-manage-exp/ajax"] = array(
		"title" => "Ajax callbacks",
		"page callback" => "lab_bulk_manage_exp_ajax",
		"access arguments" => array(
			" Case Study bulk manage abstract"
		),
		"type" => MENU_CALLBACK,
		'file'=> 'bulk_approval.inc'
	);
	$items['case-study-project/certificates'] = array(
		'title'=> 'List of Case Study Certificates',
		'description'=> 'List of Case Study Certificates',
		'page callback'=> '_list_cfd_case_study_certificates',
		'access arguments'=> array(
			'list Case Study certificates'
		),
		'file'=> 'pdf/list_cfd_case_study_certificate.inc'
	);
	$items['case-study-project/certificates/generate-pdf'] = array(
		'title'=> 'Download Certificate',
		'description'=> 'Download Certificate',
		'page callback'=> 'drupal_get_form',
		'page arguments'=> array(
			'generate_pdf'
		),
		'type'=> MENU_CALLBACK,
		'access arguments'=> array(
			'generate pdf'
		),
		'file'=> 'pdf/cert_new.inc'
	);
	$items['case-study-project/certificates-custom'] = array(
		'title'=> 'List of Case Study Custom Certificates',
		'description'=> 'List of Case Study Custom Certificates',
		'page callback'=> '_list_cfd_case_study_custom_certificates',
		'access arguments'=> array(
			'list Case Study custom certificates'
		),
		'file'=> 'pdf/list_mentor_certificates.inc'
	);
	$items['case-study-project/certificates-custom/pdf'] = array(
		'title'=> 'Download Certificate',
		'description'=> 'Download Certificate',
		'page callback'=> 'drupal_get_form',
		'page arguments'=> array(
			'generate_pdf'
		),
		'type'=> MENU_CALLBACK,
		'access arguments'=> array(
			'generate pdf'
		),
		'file'=> 'pdf/mentor_cert_pdf.inc'
	);
	$items['case-study-project/certificates/verify'] = array(
		"title" => "Certificate Verification",
		"page callback" => "verify_certificates",
'page arguments'=> array(
			'verify_certificates'
		),
		"access arguments" => array(
			"verify certificates"
		),
		'type'=> MENU_CALLBACK,
		'file'=> 'pdf/verify_certificates.inc'
	);
	return $items;
}
/**
 * Implementation of hook_perm().
 */
function cfd_case_study_permission()
{
	return array(
		'Case Study create proposal'=> array(
			'title'=> t('Case Study create proposal'),
			'restrict access'=> TRUE
		),
		'Case Study manage proposal'=> array(
			'title'=> t('Case Study manage proposal'),
			'restrict access'=> TRUE
		),
		'Case Study edit proposal'=> array(
			'title'=> t('Case Study edit proposal'),
			'restrict access'=> TRUE
		),
		'Case Study approve proposal'=> array(
			'title'=> t('Case Study approve proposal'),
			'restrict access'=> TRUE
		),
		'Case Study propose solution'=> array(
			'title'=> t('Case Study propose solution'),
			'restrict access'=> TRUE
		),
		'Case Study approve abstract'=> array(
			'title'=> t('Case Study approve code'),
			'restrict access'=> TRUE
		),
		'Case Study bulk manage abstract'=> array(
			'title'=> t('Case Study bulk manage abstract'),
			'restrict access'=> TRUE
		),
		'Case Study bulk delete abstract'=> array(
			'title'=> t('Case Study bulk delete code'),
			'restrict access'=> TRUE
		),
		'Case Study upload abstract'=> array(
			'title'=> t('Case Study upload code'),
			'restrict access'=> TRUE
		),
		'Case Study download code'=> array(
			'title'=> t('Case Study download code'),
			'restrict access'=> TRUE
		),
		'administer  Case Study'=> array(
			'title'=> t('administer  Case Study'),
			'restrict access'=> TRUE
		),
		'Case Study generate abstract'=> array(
			'title'=> t('Case Study generate abstract'),
			'restrict access'=> TRUE
		),
		"list Case Study certificates" => array(
			"title" => t("list the certificates"),
			"description" => t("list the certificates"),
			'restrict access'=> TRUE
		),
		"list Case Study custom certificates" => array(
			"title" => t("list the mentor certificates"),
			"description" => t("list the mentor certificates"),
			'restrict access'=> TRUE
		),
		"verify certificates" => array(
			"title" => t("verify the certificates"),
			"description" => t("verify the certificates"),
			'restrict access'=> TRUE
		)

	);
}
/*************************** VALIDATION FUNCTIONS *****************************/
function cfd_case_study_check_valid_filename($file_name)
{
	if (!preg_match('/^[0-9a-zA-Z\.\_]+$/', $file_name))
		return FALSE;
	else if (substr_count($file_name, ".") > 1)
		return FALSE;
	else
		return TRUE;
}
function cfd_case_study_check_name($name = '')
{
	if (!preg_match('/^[0-9a-zA-Z\ ]+$/', $name))
		return FALSE;
	else
		return TRUE;
}
function cfd_case_study_check_code_number($number = '')
{
	if (!preg_match('/^[0-9]+$/', $number))
		return FALSE;
	else
		return TRUE;
}
function cfd_case_study_path()
{
	return $_SERVER['DOCUMENT_ROOT'] . base_path() . 'uploads/case_study_uploads/';
}
function cfd_case_study_file_path($value='')
{
	return $_SERVER['DOCUMENT_ROOT'] . base_path() . 'uploads/';
}
/************************* USER VERIFICATION FUNCTIONS ************************/
function cfd_case_study_get_proposal()
{
	global $user;
	$query = db_select('case_study_proposal');
	$query->fields('case_study_proposal');
	$query->condition('uid', $user->uid);
	$query->orderBy('id', 'DESC');
	$query->range(0, 1);
	$proposal_q = $query->execute();
	$proposal_data = $proposal_q->fetchObject();
	if (!$proposal_data)
	{
		drupal_set_message("You do not have any approved  Case Study proposal. Please propose the Case Study proposal", 'error');
		drupal_goto('');
	} //!$proposal_data
	switch ($proposal_data->approval_status)
	{
		case 0:
			drupal_set_message(t('Proposal is awaiting approval.'), 'status');
			return FALSE;
		case 1:
			return $proposal_data;
		case 2:
			drupal_set_message(t('Proposal has been dis-approved.'), 'error');
			return FALSE;
		case 3:
			drupal_set_message(t('Proposal has been marked as completed.'), 'status');
			return FALSE;
		default:
			drupal_set_message(t('Invalid proposal state. Please contact site administrator for further information.'), 'error');
			return FALSE;
	} //$proposal_data->approval_status
	return FALSE;
}
/*************************************************************************/
/***** Function To convert only first charater of string in uppercase ****/
/*************************************************************************/
/*function ucname($string)
{
	$string = ucwords(strtolower($string));
	foreach (array(
		'-',
		'\''
	) as $delimiter)
	{
		if (strpos($string, $delimiter) !== false)
		{
			$string = implode($delimiter, array_map('ucfirst', explode($delimiter, $string)));
		} //strpos($string, $delimiter) !== false
	} //array( '-', '\'') as $delimiter
	return $string;
}*/
function _df_sentence_case($string)
{
	$string = ucwords(strtolower($string));
	foreach (array(
		'-',
		'\''
	) as $delimiter)
	{
		if (strpos($string, $delimiter) !== false)
		{
			$string = implode($delimiter, array_map('ucfirst', explode($delimiter, $string)));
		} //strpos($string, $delimiter) !== false
	} //array( '-', '\'') as $delimiter
	return $string;
}
function _df_list_of_states()
{
	$states = array(
		0 => '-Select-'
	);
	$query = db_select('list_states_of_india');
	$query->fields('list_states_of_india');
	//$query->orderBy('', '');
	$states_list = $query->execute();
	while ($states_list_data = $states_list->fetchObject())
	{
		$states[$states_list_data->state] = $states_list_data->state;
	} //$states_list_data = $states_list->fetchObject()
	return $states;
}
function _df_list_of_cities()
{
	$city = array(
		0 => '-Select-'
	);
	$query = db_select('list_cities_of_india');
	$query->fields('list_cities_of_india');
	$query->orderBy('city', 'ASC');
	$city_list = $query->execute();
	while ($city_list_data = $city_list->fetchObject())
	{
		$city[$city_list_data->city] = $city_list_data->city;
	} //$city_list_data = $city_list->fetchObject()
	return $city;
}
function _df_list_of_pincodes()
{
	$pincode = array(
		0 => '-Select-'
	);
	$query = db_select('list_of_all_india_pincode');
	$query->fields('list_of_all_india_pincode');
	$query->orderBy('pincode', 'ASC');
	$pincode_list = $query->execute();
	while ($pincode_list_data = $pincode_list->fetchObject())
	{
		$pincode[$pincode_list_data->pincode] = $pincode_list_data->pincode;
	} //$pincode_list_data = $pincode_list->fetchObject()
	return $pincode;
}
function _df_list_of_departments()
{
	$department = array();
	$query = db_select('list_of_departments');
	$query->fields('list_of_departments');
	$query->orderBy('id', 'DESC');
	$department_list = $query->execute();
	while ($department_list_data = $department_list->fetchObject())
	{
		$department[$department_list_data->department] = $department_list_data->department;
	} //$department_list_data = $department_list->fetchObject()
	return $department;
}
function _df_dir_name($project, $proposar_name)
{
	$project_title = ucname($project);
	$proposar_name = ucname($proposar_name);
	$dir_name = $project_title . ' By '. $proposar_name;
	$directory_name = str_replace("__", "_", str_replace(" ", "_", str_replace("/","_", trim($dir_name))));
	return $directory_name;
}
function cfd_case_study_document_path()
{
	return $_SERVER['DOCUMENT_ROOT'] . base_path() . 'uploads/case_study_uploads/';
}
function DF_RenameDir($proposal_id, $dir_name)
{
	$proposal_id = $proposal_id;
	$dir_name = $dir_name;
	$query = db_query("SELECT directory_name,id FROM case_study_proposal WHERE id = :proposal_id", array(
		':proposal_id'=> $proposal_id
	));
	$result = $query->fetchObject();
	if ($result != NULL)
	{
		$files = scandir(cfd_case_study_path());
		$files_id_dir = cfd_case_study_path() . $result->id;
		//var_dump($files);die;
		$file_dir = cfd_case_study_path() . $result->directory_name;
		if (is_dir($file_dir))
		{
			$new_directory_name = rename(cfd_case_study_path() . $result->directory_name, cfd_case_study_path() . $dir_name);
			return $new_directory_name;
		} //is_dir($file_dir)
		else if (is_dir($files_id_dir))
		{
			$new_directory_name = rename(cfd_case_study_path() . $result->id, cfd_case_study_path() . $dir_name);
			return $new_directory_name;
		} //is_dir($files_id_dir)
		else
		{
			drupal_set_message('Directory not available for rename.');
			return;
		}
	} //$result != NULL
	else
	{
		drupal_set_message('Project directory name not present in databse');
		return;
	}
	return;
}
function CreateReadmeFileCaseStudyProject($proposal_id)
{
	$result = db_query("
                        SELECT * from case_study_proposal WHERE id = :proposal_id", array(
		":proposal_id" => $proposal_id
	));
	$proposal_data = $result->fetchObject();
	$root_path = cfd_case_study_path();
	$readme_file = fopen($root_path . $proposal_data->directory_name . "/README.txt", "w") or die("Unable to open file!");
	$txt = "";
	$txt .= "About the Case Study";
	$txt .= "\n" . "\n";
	$txt .= "Title Of The Case Study Project: " . $proposal_data->project_title . "\n";
	$txt .= "Proposar Name: " . $proposal_data->name_title . " " . $proposal_data->contributor_name . "\n";
	$txt .= "University: " . $proposal_data->university . "\n";
	$txt .= "\n" . "\n";
	$txt .= " Case Study Project By FOSSEE, IIT Bombay" . "\n";
	fwrite($readme_file, $txt);
	fclose($readme_file);
	return $txt;
}
function rrmdir_project($prop_id)
{
	$proposal_id = $prop_id;
	$result = db_query("SELECT * from case_study_proposal WHERE id = :proposal_id", array(
		":proposal_id" => $proposal_id
	));
	$proposal_data = $result->fetchObject();
	$root_path = cfd_case_study_document_path();
	$dir = $root_path . $proposal_data->directory_name;
	if ($proposal_data->id == $prop_id)
	{
		if (is_dir($dir))
		{
			$objects = scandir($dir);
			foreach ($objects as $object)
			{
				if ($object != "." && $object != "..")
				{
					if (filetype($dir . "/" . $object) == "dir")
					{
						rrmdir($dir . "/" . $object);
					} //filetype($dir . "/" . $object) == "dir"
					else
					{
						unlink($dir . "/" . $object);
					}
				} //$object != "." && $object != ".."
			} //$objects as $object
			reset($objects);
			rmdir($dir);
			$msg = drupal_set_message("Directory deleted successfully");
			return $msg;
		} //is_dir($dir)
		$msg = drupal_set_message("Directory not present");
		return $msg;
	} //$proposal_data->id == $prop_id
	else
	{
		$msg = drupal_set_message("Data not found");
		return $msg;
	}
}
function rrmdir($dir)
{
	if (is_dir($dir))
	{
		$objects = scandir($dir);
		foreach ($objects as $object)
		{
			if ($object != "." && $object != "..")
			{
				if (filetype($dir . "/" . $object) == "dir")
					rrmdir($dir . "/" . $object);
				else
					unlink($dir . "/" . $object);
			} //$object != "." && $object != ".."
		} //$objects as $object
		reset($objects);
		rmdir($dir);
	} //is_dir($dir)
}
